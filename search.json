[{"path":"https://stopsack.github.io/risks/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://stopsack.github.io/risks/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2020 Konrad Stopsack,Travis Gerke  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. risks Copyright (C) 2020 Konrad Stopsack,Travis Gerke This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://stopsack.github.io/risks/articles/margstd.html","id":"the-basics","dir":"Articles","previous_headings":"","what":"The basics","title":"Marginal standardization","text":"Marginal standardization, approach = \"margstd_delta\" approach = \"margstd_boot\", makes use good convergence properties logit link, also guaranteed result probabilities within (0; 1). fitting logistic model, predicted probabilities observation obtained levels exposure variable. Risk ratios risk differences calculated contrasting predicted probabilities ratios differences. Standard errors confidence intervals obtained via delta method via bootstrapping entire procedure. use example data Get Started vignette. fit risk difference model Get Started vignette, time explicitly specifying approach = \"margstd_delta\": Consistent earlier results, observed women stage III breast cancer 57 percentage points higher risk death, adjusting hormone receptor status. Note coefficients standard errors estimated exposure variable. Model fit characteristics predicted values stem directly underlying logistic model.","code":"library(risks)  # provides riskratio(), riskdiff(), postestimation functions library(dplyr)  # For data handling library(broom)  # For tidy() model summaries data(breastcancer) fit_margstd <- riskdiff(formula = death ~ stage + receptor,                          data = breastcancer,                          approach = \"margstd_delta\") summary(fit_margstd) #>  #> Risk difference model, fitted via marginal standardization of a logistic model with delta method (margstd_delta). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: (3 not defined because of singularities) #>                Estimate Std. Error z value Pr(>|z|)     #> stageStage I    0.00000    0.00000     NaN      NaN     #> stageStage II   0.16303    0.05964   2.734  0.00626 **  #> stageStage III  0.57097    0.09962   5.732 9.95e-09 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 228.15  on 191  degrees of freedom #> Residual deviance: 185.88  on 188  degrees of freedom #> AIC: 193.88 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Confidence intervals for coefficients: (delta method) #>                     2.5 %    97.5 % #> stageStage I   0.00000000 0.0000000 #> stageStage II  0.04614515 0.2799187 #> stageStage III 0.37571719 0.7662158"},{"path":"https://stopsack.github.io/risks/articles/margstd.html","id":"choice-of-exposure-variable","dir":"Articles","previous_headings":"","what":"Choice of exposure variable","title":"Marginal standardization","text":"Standardization can done one exposure variable, thus coefficients estimated variables model. default, first right-hand variable model formula assumed exposure. variable types logical, factor, ordered, character taken represent categorical variables. Using variable =, different variable can specified. Using =, levels contrasts order levels can specified. first level used reference risk ratio 1 risk difference 0. warning shown continuous values requested levels exceed range data (extrapolation). Requesting estimates different exposure variable, using variable = \"receptor\":","code":"fit_margstd2 <- riskdiff(formula = death ~ stage + receptor,                           data = breastcancer,                           approach = \"margstd_delta\", variable = \"receptor\") summary(fit_margstd2) #>  #> Risk difference model, fitted via marginal standardization of a logistic model with delta method (margstd_delta). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: (3 not defined because of singularities) #>              Estimate Std. Error z value Pr(>|z|)   #> receptorHigh  0.00000    0.00000     NaN      NaN   #> receptorLow   0.16163    0.07454   2.169   0.0301 * #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 228.15  on 191  degrees of freedom #> Residual deviance: 185.88  on 188  degrees of freedom #> AIC: 193.88 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Confidence intervals for coefficients: (delta method) #>                   2.5 %    97.5 % #> receptorHigh 0.00000000 0.0000000 #> receptorLow  0.01554788 0.3077201"},{"path":"https://stopsack.github.io/risks/articles/margstd.html","id":"bootstrap-confidence-intervals","dir":"Articles","previous_headings":"","what":"Bootstrap confidence intervals","title":"Marginal standardization","text":"Marginal standardization rely analytical standard error formulae. One approach (\"margstd_delta\") delta method. Alternatively, parametric bootstrapping (\"margstd_boot\" default, bootci = \"bca\") can used: given initial maximum-likelihood estimates coefficients observed predictors, outcome vector predicted binomial distribution. model fit using predicted outcomes observed predictors. Repeating process generates empirical distribution coefficients. Confidence intervals coefficients calculated based BCa confidence intervals parametric bootstrapping (Efron B, Narasimhan B. Automatic Construction Bootstrap Confidence Intervals. J Comput Graph Stat 2020;29(3):608-619). comparison purposes, alternative approaches bootstrapping confidence interval estimation can requested tidy(), summary.margstd(), confint(): bootci = \"normal\": Normality-based confidence intervals parametric bootstrapping. may give --range estimates confidence limits. bootci = \"nonpar\": BCa intervals nonparametric bootstrapping. , data resampled, rather outcome predicted model. Especially small datasets regular binomial models log links may converge marginal standardization may option, resampling data comes risk empty strata resamples, resulting sparse-data bias model nonconvergence. resulting confidence intervals may narrow. option used caution. using tidy() access model results, parameter bootverbose = TRUE add bootstrapping parameters properties tibble: bootrepeats: Number bootstrap repeats. bootci: Type bootstrap confidence interval (bca, normal, nonpar, see ). jacksd.low jacksd.high: Jackknife-based Monte-Carlo standard errors lower upper limits confidence interval. Available bca intervals . simulation errors large compared desired precision confidence limits, number bootstrap repeats needs substantially increased.","code":"fit_margstd3 <- riskdiff(formula = death ~ stage + receptor,                           data = breastcancer,                           approach = \"margstd_boot\") summary(fit_margstd3) #>  #> Risk difference model, fitted via marginal standardization of a logistic model with bootstrapping (margstd_boot). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: (3 not defined because of singularities) #>                Estimate Std. Error z value Pr(>|z|)     #> stageStage I    0.00000    0.00000     NaN      NaN     #> stageStage II   0.16303    0.06284   2.594  0.00948 **  #> stageStage III  0.57097    0.09712   5.879 4.13e-09 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 228.15  on 191  degrees of freedom #> Residual deviance: 185.88  on 188  degrees of freedom #> AIC: 193.88 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Confidence intervals for coefficients: (1000 BCa bootstrap repeats) #>                      2.5%     97.5% #> stageStage I           NA        NA #> stageStage II  0.05042076 0.3000790 #> stageStage III 0.36838352 0.7443227  tidy(fit_margstd3, bootverbose = TRUE) %>%   select(-statistic, -p.value)  # allow the other columns to get printed instead #> # A tibble: 3 × 10 #>   term       estimate std.error conf.low conf.high bootrepeats bootci jacksd.low #>   <chr>      <dbl[1d>     <dbl>    <dbl>     <dbl>       <dbl> <chr>       <dbl> #> 1 stageStag…    0        0       NA         NA            1000 bca      NA       #> 2 stageStag…    0.163    0.0580   0.0529     0.284        1000 bca       0.00348 #> 3 stageStag…    0.571    0.0996   0.362      0.750        1000 bca       0.0163  #> # ℹ 2 more variables: jacksd.high <dbl>, model <chr>"},{"path":"https://stopsack.github.io/risks/articles/margstd.html","id":"bootstrap-repeats","dir":"Articles","previous_headings":"","what":"Bootstrap repeats","title":"Marginal standardization","text":"default (currently) 1000 bootstrap repeats reduce initial computation time. calculation BCa confidence intervals fails error, final, precise estimates, number repeats increased >>1000. Use option bootrepeats = summary(), tidy(), confint(). reproducibility, seed set (e.g., set.seed(123)).","code":""},{"path":"https://stopsack.github.io/risks/articles/models.html","id":"implemented-model-types","dir":"Articles","previous_headings":"","what":"Implemented model types","title":"Models and model comparisons","text":"risks package implements major regression models proposed relative risks risk differences. default (approach = \"auto\"), riskratio() riskdiff() estimate efficient valid model converges; numerically challenging cases, default marginal standardization, return parameters covariates. following models implemented risks package: 1 Indicates priority legacy modelling strategy (approach = \"legacy\") attempts model fitting (glm_startp: RR). model fitted always indicated first line output summary() model column tidy(). methods sections manuscripts, approach can described detail follows: “Risk ratios (risk differences) obtained via (method listed first line model summary.risks(...)) using risks R package (reference package /article listed column ‘reference’).” example: “Risk ratios obtained binomial models log link, convergence-assisted Poisson models (ref. Spiegelman Hertzmark, AJE 2005), using risks R package (https://stopsack.github.io/risks/).”","code":""},{"path":"https://stopsack.github.io/risks/articles/models.html","id":"model-choice","dir":"Articles","previous_headings":"","what":"Model choice","title":"Models and model comparisons","text":"default, automatic model fitting (approach = \"auto\") reports results marginal standardization using logistic model delta method standard errors (equivalent approach = \"margstd_delta\"). exception made interaction terms exposure confounders included. case, confidence intervals calculated using bootstrapping (equivalent requesting approach = \"margstd_boot\"). Alternatively, options listed approach = table can requested directly. However, unlike approach = \"auto\" (default) approach = \"legacy\", selected model may converge. load example data Get Started vignette. select binomial model starting values Poisson model: However, binomial model without starting values converge:","code":"library(risks)  # provides riskratio(), riskdiff(), postestimation functions library(dplyr)  # For data handling library(broom)  # For tidy() model summaries data(breastcancer) riskratio(formula = death ~ stage + receptor,            data = breastcancer,            approach = \"glm_startp\") #>  #> Risk ratio model #> Call:  stats::glm(formula = death ~ stage + receptor, family = stats::binomial(link = \"log\"),  #>     data = breastcancer, start = \"(from Poisson model)\") #>  #> Coefficients: #>    (Intercept)   stageStage II  stageStage III     receptorLow   #>        -2.3521          0.9314          1.7695          0.4436   #>  #> Degrees of Freedom: 191 Total (i.e. Null);  188 Residual #> Null Deviance:       228.1  #> Residual Deviance: 185.9     AIC: 193.9 riskratio(formula = death ~ stage + receptor,            data = breastcancer,            approach = \"glm\") #> Error: no valid set of coefficients has been found: please supply starting values"},{"path":"https://stopsack.github.io/risks/articles/models.html","id":"model-comparisons","dir":"Articles","previous_headings":"","what":"Model comparisons","title":"Models and model comparisons","text":"approach = \"\", model types listed tables fitted. fitted object, e.g., fit, one converged models. summary convergence status models displayed beginning summary(fit): Individual models can accessed fit$all_models[[1]] fit$all_models[[6]] ([[7]] fitting risk ratio model). tidy() shows coefficients confidence intervals models converged:","code":"fit_all <- riskratio(formula = death ~ stage + receptor,                       data = breastcancer,                       approach = \"all\") #> Warning in .recacheSubclasses(def@className, def, env): undefined subclass #> \"ndiMatrix\" of class \"replValueSp\"; definition not updated #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: numDeriv #> Loading required package: quantreg #> Loading required package: SparseM #>  #> Attaching package: 'SparseM' #> The following object is masked from 'package:base': #>  #>     backsolve #>  #> Attaching package: 'turboEM' #> The following objects are masked from 'package:numDeriv': #>  #>     grad, hessian summary(fit_all) #>  #> All fitted models: #>            Model Converged Max.prob. #> 1     robpoisson      TRUE 0.9052473 #> 2            glm     FALSE        NA #> 3     glm_startp      TRUE 0.8702313 #> 4         logbin      TRUE 0.8702292 #> 5   logbin_start      TRUE 0.8702294 #> 6   margstd_boot      TRUE 0.8158560 #> 7  margstd_delta      TRUE 0.8158560 #> 8       logistic      TRUE 0.8158560 #> 9      duplicate      TRUE 0.4785245 #> 10    glm_startd      TRUE 0.8702318 #>  #> Risk ratio model, fitted as Poisson model with robust covariance (robpoisson). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = poisson(link = \"log\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: #>                Estimate Std. Error z value Pr(>|z|)     #> (Intercept)     -2.3658     0.3602  -6.569 5.08e-11 *** #> stageStage II    0.9246     0.3932   2.351   0.0187 *   #> stageStage III   1.7772     0.3855   4.610 4.03e-06 *** #> receptorLow      0.4891     0.2129   2.297   0.0216 *   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for poisson family taken to be 1) #>  #>     Null deviance: 137.00  on 191  degrees of freedom #> Residual deviance: 110.29  on 188  degrees of freedom #> AIC: 226.29 #>  #> Number of Fisher Scoring iterations: 6 #>  #> Confidence intervals for coefficients: (robust) #>                      2.5 %     97.5 % #> (Intercept)    -3.07172916 -1.6599084 #> stageStage II   0.15386831  1.6952382 #> stageStage III  1.02161187  2.5328206 #> receptorLow     0.07183369  0.9062773 tidy(fit_all) %>%   select(-statistic, -p.value) %>%   print(n = 50) #> # A tibble: 34 × 6 #>    term            estimate std.error conf.low conf.high model         #>    <chr>          <dbl[1d]>     <dbl>    <dbl>     <dbl> <chr>         #>  1 (Intercept)       -2.37      0.360  -3.07      -1.66  robpoisson    #>  2 stageStage II      0.925     0.393   0.154      1.70  robpoisson    #>  3 stageStage III     1.78      0.386   1.02       2.53  robpoisson    #>  4 receptorLow        0.489     0.213   0.0718     0.906 robpoisson    #>  5 (Intercept)       -2.35      0.360  -3.06      -1.65  glm_startp    #>  6 stageStage II      0.931     0.393   0.161      1.70  glm_startp    #>  7 stageStage III     1.77      0.385   1.01       2.52  glm_startp    #>  8 receptorLow        0.444     0.197   0.0578     0.829 glm_startp    #>  9 (Intercept)       -2.35      0.360  -3.06      -1.65  logbin        #> 10 stageStage II      0.931     0.393   0.161      1.70  logbin        #> 11 stageStage III     1.77      0.385   1.01       2.52  logbin        #> 12 receptorLow        0.444     0.197   0.0578     0.829 logbin        #> 13 (Intercept)       -2.35      0.360  -3.06      -1.65  logbin_start  #> 14 stageStage II      0.931     0.393   0.161      1.70  logbin_start  #> 15 stageStage III     1.77      0.385   1.01       2.52  logbin_start  #> 16 receptorLow        0.444     0.197   0.0578     0.829 logbin_start  #> 17 stageStage I       0         0      NA         NA     margstd_boot  #> 18 stageStage II      0.899     0.435   0.117      1.77  margstd_boot  #> 19 stageStage III     1.81      0.432   1.00       2.64  margstd_boot  #> 20 stageStage I       0         0       0          0     margstd_delta #> 21 stageStage II      0.899     0.387   0.140      1.66  margstd_delta #> 22 stageStage III     1.81      0.378   1.07       2.55  margstd_delta #> 23 (Intercept)       -2.37      0.420  -3.19      -1.54  logistic      #> 24 stageStage II      1.13      0.466   0.222      2.05  logistic      #> 25 stageStage III     2.94      0.586   1.79       4.08  logistic      #> 26 receptorLow        0.920     0.395   0.145      1.69  logistic      #> 27 (Intercept)       -2.37      0.362  -3.08      -1.66  duplicate     #> 28 stageStage II      0.923     0.395   0.149      1.70  duplicate     #> 29 stageStage III     1.78      0.385   1.03       2.54  duplicate     #> 30 receptorLow        0.504     0.224   0.0647     0.944 duplicate     #> 31 (Intercept)       -2.35      0.360  -3.06      -1.65  glm_startd    #> 32 stageStage II      0.931     0.393   0.161      1.70  glm_startd    #> 33 stageStage III     1.77      0.385   1.01       2.52  glm_startd    #> 34 receptorLow        0.444     0.197   0.0578     0.829 glm_startd"},{"path":"https://stopsack.github.io/risks/articles/risks.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to the risks package: Get Started","text":"risks released CRAN, install.packages(\"risks\") available. Currently, development version risks can installed GitHub using:","code":"# install.packages(\"remotes\")  # The \"remotes\" package needs to be installed remotes::install_github(\"stopsack/risks\")"},{"path":"https://stopsack.github.io/risks/articles/risks.html","id":"an-example-cohort-study","dir":"Articles","previous_headings":"","what":"An example cohort study","title":"Introduction to the risks package: Get Started","text":"use cohort women breast cancer, used Spiegelman Hertzmark (J Epidemiol 2005) Greenland (J Epidemiol 2004). categorical exposure stage, binary outcome death, binary confounder receptor.","code":"library(risks)  # provides riskratio(), riskdiff(), postestimation functions library(dplyr)  # For data handling library(broom)  # For tidy() model summaries  data(breastcancer)  # Load sample data  breastcancer %>%  # Display the sample data   group_by(receptor, stage) %>%    summarize(deaths = sum(death), total = n(), risk = deaths/total) #> # A tibble: 6 × 5 #> # Groups:   receptor [2] #>   receptor stage     deaths total   risk #>   <chr>    <fct>      <dbl> <int>  <dbl> #> 1 High     Stage I        5    55 0.0909 #> 2 High     Stage II      17    74 0.230  #> 3 High     Stage III      9    15 0.6    #> 4 Low      Stage I        2    12 0.167  #> 5 Low      Stage II       9    22 0.409  #> 6 Low      Stage III     12    14 0.857"},{"path":"https://stopsack.github.io/risks/articles/risks.html","id":"adjusted-risk-ratios","dir":"Articles","previous_headings":"","what":"Adjusted risk ratios","title":"Introduction to the risks package: Get Started","text":"risk death higher among women higher-stage hormone receptor-low cancers, also tend higher stage. Using risks models obtain (possibly multivariable-adjusted) risk ratios risk differences similar standard code logistic models R. customary R, log(RR) returned; see obtain exponentiated values. options model family link need supplied:","code":"fit_rr <- riskratio(formula = death ~ stage + receptor, data = breastcancer) summary(fit_rr) #>  #> Risk ratio model, fitted via marginal standardization of a logistic model with delta method (margstd_delta). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: (3 not defined because of singularities) #>                Estimate Std. Error z value Pr(>|z|)     #> stageStage I     0.0000     0.0000     NaN      NaN     #> stageStage II    0.8989     0.3875   2.320   0.0203 *   #> stageStage III   1.8087     0.3783   4.781 1.75e-06 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 228.15  on 191  degrees of freedom #> Residual deviance: 185.88  on 188  degrees of freedom #> AIC: 193.88 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Confidence intervals for coefficients: (delta method) #>                    2.5 %   97.5 % #> stageStage I   0.0000000 0.000000 #> stageStage II  0.1395299 1.658324 #> stageStage III 1.0671711 2.550242"},{"path":"https://stopsack.github.io/risks/articles/risks.html","id":"adjusted-risk-differences","dir":"Articles","previous_headings":"","what":"Adjusted risk differences","title":"Introduction to the risks package: Get Started","text":"obtain risk differences, use riskdiff, syntax: example, risk death 57 percentage points higher women stage III breast cancer compared stage (95% confidence interval, 38 77 percentage points), adjusting hormone receptor status. model summary riskratio() riskdiff() includes two additions compared regular glm() model: first line summary(), type risk regression model displayed (example, “Risk ratio model, fitted binomial model...”). end output, confidence intervals model coefficients printed.","code":"fit_rd <- riskdiff(formula = death ~ stage + receptor, data = breastcancer) summary(fit_rd) #>  #> Risk difference model, fitted via marginal standardization of a logistic model with delta method (margstd_delta). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: (3 not defined because of singularities) #>                Estimate Std. Error z value Pr(>|z|)     #> stageStage I    0.00000    0.00000     NaN      NaN     #> stageStage II   0.16303    0.05964   2.734  0.00626 **  #> stageStage III  0.57097    0.09962   5.732 9.95e-09 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 228.15  on 191  degrees of freedom #> Residual deviance: 185.88  on 188  degrees of freedom #> AIC: 193.88 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Confidence intervals for coefficients: (delta method) #>                     2.5 %    97.5 % #> stageStage I   0.00000000 0.0000000 #> stageStage II  0.04614515 0.2799187 #> stageStage III 0.37571719 0.7662158"},{"path":"https://stopsack.github.io/risks/articles/risks.html","id":"accessing-model-coefficients","dir":"Articles","previous_headings":"","what":"Accessing model coefficients","title":"Introduction to the risks package: Get Started","text":"risks package provides interface broom::tidy(), returns data frame coefficients (risk differences example), standard errors, z statistics, confidence intervals. accordance glm() standards, coefficients relative risks shown logarithmic scale. Exponentiated coefficients risk ratios easily obtained via tidy(..., exponentiate = TRUE): example, risk death 6 times higher women stage III breast cancer compared stage (95% confidence interval, 3 13 times), adjusting hormone receptor status.","code":"tidy(fit_rd) #> # A tibble: 3 × 8 #>   term           estimate std.error statistic   p.value conf.low conf.high model #>   <chr>             <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr> #> 1 stageStage I      0        0         NaN    NaN         0          0     marg… #> 2 stageStage II     0.163    0.0596      2.73   6.26e-3   0.0461     0.280 marg… #> 3 stageStage III    0.571    0.0996      5.73   9.95e-9   0.376      0.766 marg… tidy(fit_rr, exponentiate = TRUE) #> # A tibble: 3 × 8 #>   term           estimate std.error statistic   p.value conf.low conf.high model #>   <chr>             <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr> #> 1 stageStage I       1        0        NaN    NaN           1         1    marg… #> 2 stageStage II      2.46     0.387      2.32   2.03e-2     1.15      5.25 marg… #> 3 stageStage III     6.10     0.378      4.78   1.75e-6     2.91     12.8  marg…"},{"path":"https://stopsack.github.io/risks/articles/risks.html","id":"more-post-estimation-commands","dir":"Articles","previous_headings":"","what":"More post-estimation commands","title":"Introduction to the risks package: Get Started","text":"Typical R functions build regression models can process fitted risks models. addition tidy(), examples : coef(fit) coefficients(fit) return model coefficients (.e., RDs log(RR)) numeric vector confint(fit, level = 0.9) returns 90% confidence intervals. predict(fit, type = \"response\") fitted.values(fit) return predicted probabilities binary outcome. residuals(fit) returns model residuals.","code":""},{"path":"https://stopsack.github.io/risks/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Konrad Stopsack. Author, maintainer. Travis Gerke. Author.","code":""},{"path":"https://stopsack.github.io/risks/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stopsack K, Gerke T (2023). risks: Estimate Risk Ratios Risk Differences using Regression. R package version 0.4.2, https://stopsack.github.io/risks/.","code":"@Manual{,   title = {risks: Estimate Risk Ratios and Risk Differences using Regression},   author = {Konrad Stopsack and Travis Gerke},   year = {2023},   note = {R package version 0.4.2},   url = {https://stopsack.github.io/risks/}, }"},{"path":[]},{"path":"https://stopsack.github.io/risks/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Risk Ratios and Risk Differences using Regression","text":"risks package can installed CRAN: Development versions can installed GitHub using:","code":"install.packages(\"risks\") remotes::install_github(\"stopsack/risks\")"},{"path":"https://stopsack.github.io/risks/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Estimate Risk Ratios and Risk Differences using Regression","text":"risks package fits regression models risk ratios (RR) risk differences (RD). package refers “risk,” “prevalence” can substituted throughout. association exposure (smoker/nonsmoker, age years, underweight/lean/overweight/obese) risk binary outcome (dead/alive, disease/healthy), perhaps adjusting confounders (men/women, years education)? questions, many studies default reporting odds ratios, may exaggerate associations outcome common. Odds ratios often used easily obtained logistic regression models. Obtaining risk ratios risk differences, especially adjusting confounders, typically required advanced biostatistics programming skills, including R. risks package makes estimating adjusted risk ratios risk differences simple fitting logistic regression model. advanced programming biostatistics skills required. Risk ratios risk differences returned whenever data allow fitting logistic model.","code":""},{"path":"https://stopsack.github.io/risks/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic example","title":"Estimate Risk Ratios and Risk Differences using Regression","text":"example data stem cohort women breast cancer. categorical exposure stage, binary outcome death, binary confounder receptor. Fit risk difference model: Fitted objects can used usual commands generalized linear models, : tidy() broom package provides easy access coefficients:","code":"library(risks)  # provides riskratio(), riskdiff(), postestimation functions fit <- riskdiff(formula = death ~ stage + receptor, data = breastcancer) summary(fit) #>  #> Risk difference model, fitted via marginal standardization of a logistic model with delta method (margstd_delta). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Deviance Residuals:  #>    Min      1Q  Median      3Q     Max   #>                                          #>  #> Coefficients: (3 not defined because of singularities) #>                Estimate Std. Error z value Pr(>|z|)     #> stageStage I    0.00000    0.00000     NaN      NaN     #> stageStage II   0.16303    0.05964   2.734  0.00626 **  #> stageStage III  0.57097    0.09962   5.732 9.95e-09 *** #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 228.15  on 191  degrees of freedom #> Residual deviance: 185.88  on 188  degrees of freedom #> AIC: 193.88 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Confidence intervals for coefficients: (delta method) #>                     2.5 %    97.5 % #> stageStage I   0.00000000 0.0000000 #> stageStage II  0.04614515 0.2799187 #> stageStage III 0.37571719 0.7662158 broom::tidy(fit) #> # A tibble: 3 × 8 #>   term           estimate std.error statistic   p.value conf.low conf.high model #>   <chr>             <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr> #> 1 stageStage I      0        0         NaN    NaN         0          0     marg… #> 2 stageStage II     0.163    0.0596      2.73   6.26e-3   0.0461     0.280 marg… #> 3 stageStage III    0.571    0.0996      5.73   9.95e-9   0.376      0.766 marg…"},{"path":"https://stopsack.github.io/risks/index.html","id":"further-reading","dir":"","previous_headings":"","what":"Further reading","title":"Estimate Risk Ratios and Risk Differences using Regression","text":"Get started risks package Models model comparisons marginal standardization Reporting results rifttable package","code":""},{"path":"https://stopsack.github.io/risks/reference/breastcancer.html","id":null,"dir":"Reference","previous_headings":"","what":"Breast Cancer Data — breastcancer","title":"Breast Cancer Data — breastcancer","text":"cohort women breast cancer complete follow-, used Spiegelman Hertzmark (J Epidemiol 2005) Greenland (J Epidemiol 2004).","code":""},{"path":"https://stopsack.github.io/risks/reference/breastcancer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Breast Cancer Data — breastcancer","text":"","code":"breastcancer"},{"path":[]},{"path":"https://stopsack.github.io/risks/reference/breastcancer.html","id":"breastcancer","dir":"Reference","previous_headings":"","what":"breastcancer","title":"Breast Cancer Data — breastcancer","text":"tibble 192 rows 3 columns: death Death, binary: 0, 1 stage Cancer stage, 3 categories receptor Hormone receptor status, binary: \"High\", \"Low\"","code":""},{"path":"https://stopsack.github.io/risks/reference/breastcancer.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Breast Cancer Data — breastcancer","text":"Newman SC. Biostatistical methods epidemiology. New York, NY: Wiley, 2001, table 5.3","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.duplicate.html","id":null,"dir":"Reference","previous_headings":"","what":"Clustering-corrected confidence intervals for case duplication model — confint.duplicate","title":"Clustering-corrected confidence intervals for case duplication model — confint.duplicate","text":"Estimate confidence intervals case duplication model robust/sandwich/empirical covariance structure.","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.duplicate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clustering-corrected confidence intervals for case duplication model — confint.duplicate","text":"","code":"# S3 method for duplicate confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://stopsack.github.io/risks/reference/confint.duplicate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clustering-corrected confidence intervals for case duplication model — confint.duplicate","text":"object Fitted model parm used level Confidence level, defaults 0.95 ... Additional arguments, used","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.duplicate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clustering-corrected confidence intervals for case duplication model — confint.duplicate","text":"Matrix: First column, lower bound; second column, upper bound.","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.margstd_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrap confidence intervals — confint.margstd_boot","title":"Bootstrap confidence intervals — confint.margstd_boot","text":"Confidence intervals models fit using marginal standardization based parametric bootstrapping.","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.margstd_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrap confidence intervals — confint.margstd_boot","text":"","code":"# S3 method for margstd_boot confint(   object,   parm = NULL,   level = 0.95,   bootrepeats = 1000,   bootci = c(\"bca\", \"normal\", \"nonpar\"),   jacksd = FALSE,   ... )"},{"path":"https://stopsack.github.io/risks/reference/confint.margstd_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrap confidence intervals — confint.margstd_boot","text":"object Model fitted marginal standardization parm used, compatibility level Confidence level, defaults 0.95. bootrepeats Bootstrap repeats. Defaults 1000. Consider increasing. bootci Type bootstrap confidence interval: \"bca\" Default. Parametric BCa (bias-corrected accelerated) confidence intervals. \"normal\" Parametric normality-based confidence intervals, require lower repeat numbers less accurate may result invalid results ratios. \"nonpar\" Non-parametric BCa confidence intervals, used caution risk sparse-data bias non-parametric bootstrapping. jacksd Return jackknife Monte-Carlo error confidence limits? functional BCa confidence intervals. Defaults FALSE. ... used","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.margstd_boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrap confidence intervals — confint.margstd_boot","text":"Matrix: First column, lower bound; second column, upper bound.","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.margstd_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Delta method confidence intervals — confint.margstd_delta","title":"Delta method confidence intervals — confint.margstd_delta","text":"Confidence intervals models fit using marginal standardization based melta method.","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.margstd_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delta method confidence intervals — confint.margstd_delta","text":"","code":"# S3 method for margstd_delta confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://stopsack.github.io/risks/reference/confint.margstd_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delta method confidence intervals — confint.margstd_delta","text":"object Model fitted marginal standardization, delta method parm used, compatibility level Confidence level, defaults 0.95. ... used","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.margstd_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delta method confidence intervals — confint.margstd_delta","text":"Matrix: First column, lower bound; second column, upper bound.","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.robpoisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust confidence intervals for Poisson model — confint.robpoisson","title":"Robust confidence intervals for Poisson model — confint.robpoisson","text":"Estimate confidence intervals Poisson model robust/sandwich/empirical covariance structure.","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.robpoisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust confidence intervals for Poisson model — confint.robpoisson","text":"","code":"# S3 method for robpoisson confint(object, parm = NULL, level = 0.95, ...)"},{"path":"https://stopsack.github.io/risks/reference/confint.robpoisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust confidence intervals for Poisson model — confint.robpoisson","text":"object Fitted model parm used level Confidence level, defaults 0.95 ... Additional arguments, used","code":""},{"path":"https://stopsack.github.io/risks/reference/confint.robpoisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust confidence intervals for Poisson model — confint.robpoisson","text":"Matrix: First column, lower bound; second column, upper bound.","code":""},{"path":"https://stopsack.github.io/risks/reference/conv.test.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function for logbin and addreg packages — conv.test","title":"Helper function for logbin and addreg packages — conv.test","text":"1:1 copy function logbin needed exported logbin addreg.","code":""},{"path":"https://stopsack.github.io/risks/reference/conv.test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function for logbin and addreg packages — conv.test","text":"","code":"conv.test(theta1, theta2, epsilon)"},{"path":"https://stopsack.github.io/risks/reference/conv.test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function for logbin and addreg packages — conv.test","text":"theta1 theta1 theta2 theta2 epsilon epsilon","code":""},{"path":"https://stopsack.github.io/risks/reference/conv.test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function for logbin and addreg packages — conv.test","text":"Logical.","code":""},{"path":"https://stopsack.github.io/risks/reference/print.risks.html","id":null,"dir":"Reference","previous_headings":"","what":"Print model — print.risks","title":"Print model — print.risks","text":"Print fitted risks model. change, compared print.glm(), addition main type model: relative risk risk difference. multiple models fitted via approach = \"\", first converged model printed.","code":""},{"path":"https://stopsack.github.io/risks/reference/print.risks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print model — print.risks","text":"","code":"# S3 method for risks print(x, ...)"},{"path":"https://stopsack.github.io/risks/reference/print.risks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print model — print.risks","text":"x Fitted model ... Passed print.glm()","code":""},{"path":"https://stopsack.github.io/risks/reference/print.risks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print model — print.risks","text":"return value, called printing","code":""},{"path":"https://stopsack.github.io/risks/reference/print.summary.risks.html","id":null,"dir":"Reference","previous_headings":"","what":"Print model summary — print.summary.risks","title":"Print model summary — print.summary.risks","text":"Print summaries \"risks\" models. printout regular summaries generalized linear models fit via stats::glm(), except type \"risks\" model printed first (e.g., \"Poisson model robust covariance\") confidence intervals model parameters printed end.","code":""},{"path":"https://stopsack.github.io/risks/reference/print.summary.risks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print model summary — print.summary.risks","text":"","code":"# S3 method for summary.risks print(x, ...)"},{"path":"https://stopsack.github.io/risks/reference/print.summary.risks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print model summary — print.summary.risks","text":"x Model ... Passed ","code":""},{"path":"https://stopsack.github.io/risks/reference/print.summary.risks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print model summary — print.summary.risks","text":"return value, called printing","code":""},{"path":"https://stopsack.github.io/risks/reference/riskratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit risk ratio and risk difference models — riskratio","title":"Fit risk ratio and risk difference models — riskratio","text":"riskratio riskdiff provide flexible interface fitting risk ratio risk difference models. cohort studies binary outcome, risk ratios risk differences typically appropriate report odds ratios logistic regression, yet models historically difficult implement standard software. risks package selects efficient way fit risk ratio risk difference models successfully, converge whenever logistic models converge. Optionally, specific approach model fitting can also requested. Implemented Poisson models robust covariance, binomial models, logistic models case duplication, binomial models aided convergence starting values obtained Poisson models logistic models case duplication, binomial models fitted via combinatorial expectation maximization (optionally also Poisson starting values), estimates obtained via marginal standardization logistic regression bootstrapped delta method confidence intervals. Adjusting covariates (e.g., confounders) model specification (formula =) possible.","code":""},{"path":"https://stopsack.github.io/risks/reference/riskratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit risk ratio and risk difference models — riskratio","text":"","code":"riskratio(   formula,   data,   approach = c(\"auto\", \"all\", \"robpoisson\", \"duplicate\", \"glm\", \"glm_startp\",     \"glm_startd\", \"glm_cem\", \"glm_cem_startp\", \"margstd_boot\", \"margstd_delta\",     \"logistic\", \"legacy\"),   variable = NULL,   at = NULL,   ... )  riskdiff(   formula,   data,   approach = c(\"auto\", \"all\", \"robpoisson\", \"glm\", \"glm_startp\", \"glm_cem\",     \"glm_cem_startp\", \"margstd_boot\", \"margstd_delta\", \"legacy\"),   variable = NULL,   at = NULL,   ... )"},{"path":"https://stopsack.github.io/risks/reference/riskratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit risk ratio and risk difference models — riskratio","text":"formula formula object form response ~ predictors. data tibble data.frame object. approach Optional: Method model fitting. \"auto\" (default) recommended; return results \"margstd_delta\" unless interaction terms exposure confounders included. cases, results \"margstd_boot\" returned. \"\" attempt fit model via implemented approaches allow comparisons. \"legacy\" selects efficient approach converges ensures predicted probabilities within range (< 1). options allow directly selecting fitting approach, may converge yield --range predicted probabilities. See full documentation details. \"glm\" Binomial model. \"glm_startp\" Binomial model starting values Poisson model. \"glm_startd\" Binomial model starting values logistic model case duplication. \"robpoisson\" Poisson model robust covariance. \"duplicate\" Logistic model duplication cases. available riskratio(). \"glm_cem\" Binomial model fitted combinatorial expectation maximization. \"glm_cem_startp\" glm_cem, Poisson starting values. \"margstd_boot\" Marginal standardization logistic model, bootstrap standard errors/confidence intervals. \"margstd_delta\" Marginal standardization logistic model, delta method standard errors/confidence intervals. \"logistic\" comparison : logistic model. available riskratio(). variable Optional: exposure variable use marginal standardization. variable provided marginal standardization attempted, first variable model used exposure. Levels determined automatically variables types logical, character, factor can optionally supplied via =. Optional: Levels exposure variable variable marginal standardization. = determines levels contrasts exposure assessed. level listed first used reference. Levels must exist data character, factor ordered factor variables. numeric variables, levels exist data can interpolations extrapolations; levels exceed extremes data (extrapolation), warning displayed. ... Optional: arguments passed fitting functions (glm, logbin, addreg).","code":""},{"path":"https://stopsack.github.io/risks/reference/riskratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit risk ratio and risk difference models — riskratio","text":"Fitted model. object can passed post-processing functions: summary.risks: overview results (risks-specific S3 methods: summary.robpoisson, summary.margstd_boot, summary.margstd_delta). tidy.risks: tibble coefficients confidence intervals. Standard post-processing functions can also used: coef: vector coefficients. confint: matrix confidence intervals (risks-specific S3 methods: confint.robpoisson, confint.margstd_boot, confint.margstd_delta). predict.glm(type = \"response\"): fitted values (predictions). residuals: residuals. model fitting using possible approaches requested via approach = \"\", results can retrieved list all_models returned object (e.g., fit$all_models[[1]], fit$all_models[[2]], etc.).","code":""},{"path":"https://stopsack.github.io/risks/reference/riskratio.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Fit risk ratio and risk difference models — riskratio","text":"riskratio(): Fit risk ratio models riskdiff(): Fit risk difference models","code":""},{"path":"https://stopsack.github.io/risks/reference/riskratio.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fit risk ratio and risk difference models — riskratio","text":"Wacholder S. Binomial regression GLIM: Estimating risk ratios risk differences. J Epidemiol 1986;123:174-184. (Binomial regression models; approach = \"glm\") Spiegelman D, Hertzmark E. Easy SAS Calculations Risk Prevalence Ratios Differences. J Epidemiol 2005;162:199-200. (Binomial models fitted used starting values Poisson models; approach = \"glm_start\") Zou G. modified Poisson regression approach prospective studies binary data. J Epidemiol 2004;159:702-706. (Poisson model robust/sandwich standard errors; approach = \"robpoisson\") Schouten EG, Dekker JM, Kok FJ, Le Cessie S, Van Houwelingen HC, Pool J, Vandenbroucke JP. Risk ratio rate ratio estimation case-cohort designs: hypertension cardiovascular mortality. Stat Med 1993;12:1733–45; (Logistic model case duplication cluster-robust standard errors, approach = \"duplicate\"). Donoghoe MW, Marschner IC. logbin: R Package Relative Risk Regression Using Log-Binomial Model. J Stat Softw 2018;86(9). (Log-binomial models fitted via combinatorial expectation maximization; riskratio(approach = \"glm_cem\") Donoghoe MW, Marschner IC. Stable computational methods additive binomial models application adjusted risk differences. Comput Stat Data Anal 2014;80:184-96. (Additive binomial models fitted via combinatorial expectation maximization; riskdiff(approach = \"glm_cem\")) Localio AR, Margolis DJ, Berlin JA. Relative risks confidence intervals easily computed indirectly multivariable logistic regression. J Clin Epidemiol 2007;60(9):874-82. (Marginal standardization fitting logistic model; approach = \"margstd_boot\")","code":""},{"path":"https://stopsack.github.io/risks/reference/riskratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit risk ratio and risk difference models — riskratio","text":"","code":"data(breastcancer)  # Cohort study with binary outcome                     # See for details: help(breastcancer)  # Risk ratio model fit_rr <- riskratio(formula = death ~ stage + receptor, data = breastcancer) fit_rr #>  #> Risk ratio model #> Call:  stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: #>   stageStage I   stageStage II  stageStage III   #>         0.0000          0.8989          1.8087   #>  #> Degrees of Freedom: 191 Total (i.e. Null);  188 Residual #> Null Deviance:\t    228.1  #> Residual Deviance: 185.9 \tAIC: 193.9 summary(fit_rr) #>  #> Risk ratio model, fitted via marginal standardization of a logistic model with delta method (margstd_delta). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: (3 not defined because of singularities) #>                Estimate Std. Error z value Pr(>|z|)     #> stageStage I     0.0000     0.0000     NaN      NaN     #> stageStage II    0.8989     0.3875   2.320   0.0203 *   #> stageStage III   1.8087     0.3783   4.781 1.75e-06 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 228.15  on 191  degrees of freedom #> Residual deviance: 185.88  on 188  degrees of freedom #> AIC: 193.88 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Confidence intervals for coefficients: (delta method) #>                    2.5 %   97.5 % #> stageStage I   0.0000000 0.000000 #> stageStage II  0.1395299 1.658324 #> stageStage III 1.0671711 2.550242  # Risk difference model fit_rd <- riskdiff(formula = death ~ stage + receptor, data = breastcancer) fit_rd #>  #> Risk difference model #> Call:  stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: #>   stageStage I   stageStage II  stageStage III   #>          0.000           0.163           0.571   #>  #> Degrees of Freedom: 191 Total (i.e. Null);  188 Residual #> Null Deviance:\t    228.1  #> Residual Deviance: 185.9 \tAIC: 193.9 summary(fit_rd) #>  #> Risk difference model, fitted via marginal standardization of a logistic model with delta method (margstd_delta). #> Call: #> stats::glm(formula = death ~ stage + receptor, family = binomial(link = \"logit\"),  #>     data = breastcancer, start = \"(no starting values)\") #>  #> Coefficients: (3 not defined because of singularities) #>                Estimate Std. Error z value Pr(>|z|)     #> stageStage I    0.00000    0.00000     NaN      NaN     #> stageStage II   0.16303    0.05964   2.734  0.00626 **  #> stageStage III  0.57097    0.09962   5.732 9.95e-09 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 228.15  on 191  degrees of freedom #> Residual deviance: 185.88  on 188  degrees of freedom #> AIC: 193.88 #>  #> Number of Fisher Scoring iterations: 4 #>  #> Confidence intervals for coefficients: (delta method) #>                     2.5 %    97.5 % #> stageStage I   0.00000000 0.0000000 #> stageStage II  0.04614515 0.2799187 #> stageStage III 0.37571719 0.7662158"},{"path":"https://stopsack.github.io/risks/reference/risks.html","id":null,"dir":"Reference","previous_headings":"","what":"risks: Estimate risk ratios and risk differences using regression — risks","title":"risks: Estimate risk ratios and risk differences using regression — risks","text":"risks package allows fitting risk ratio risk difference models using regression.","code":""},{"path":"https://stopsack.github.io/risks/reference/risks.html","id":"risks-functions","dir":"Reference","previous_headings":"","what":"risks functions","title":"risks: Estimate risk ratios and risk differences using regression — risks","text":"riskratio: Fit risk ratio models. riskdiff: Fit risk difference models. summary.risks: Summarize fitted model. tidy.risks: Tibble (data frame) parameters, coefficients, standard errors, confidence intervals. confint.robpoisson, confint.duplicate, confint.margstd_boot, confint.margstd_delta: Confidence intervals. (Standard confidence intervals generalized linear models used models.)","code":""},{"path":[]},{"path":"https://stopsack.github.io/risks/reference/rr_rd_mantel_haenszel.html","id":null,"dir":"Reference","previous_headings":"","what":"Risk Ratios and Risk Differences from Mantel-Haenszel Estimators — rr_rd_mantel_haenszel","title":"Risk Ratios and Risk Differences from Mantel-Haenszel Estimators — rr_rd_mantel_haenszel","text":"function implements Mantel-Haenszel estimators risk ratio risk differences binary categorical exposure one categorical confounder(s). Compare estimates regression models.","code":""},{"path":"https://stopsack.github.io/risks/reference/rr_rd_mantel_haenszel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Risk Ratios and Risk Differences from Mantel-Haenszel Estimators — rr_rd_mantel_haenszel","text":"","code":"rr_rd_mantel_haenszel(   data,   exposure,   outcome,   confounders,   estimand = c(\"rr\", \"rd\"),   conf.level = 0.95 )"},{"path":"https://stopsack.github.io/risks/reference/rr_rd_mantel_haenszel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Risk Ratios and Risk Differences from Mantel-Haenszel Estimators — rr_rd_mantel_haenszel","text":"data Data set. exposure Exposure variable. Must binary categorical. first level treated unexposed. outcome Outcome variable. Must binary. confounders Optional. Binary categorical variable(s) perform stratification . Supply one variable using confounders = c(var1, var2). estimand Optional. \"rr\" risk ratio; \"rd\" risk difference. Defaults \"rr\". conf.level Optional. Confidence level. Defaults 0.95.","code":""},{"path":"https://stopsack.github.io/risks/reference/rr_rd_mantel_haenszel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Risk Ratios and Risk Differences from Mantel-Haenszel Estimators — rr_rd_mantel_haenszel","text":"Tibble tidy format term (non-reference) exposure levels estimate Risk ratio (log scale) risk difference std.error, conf.low, conf.high  Square-root M-H variance estimate, corresponding confidence limits (log scale RR) model always \"mh\" estimand \"rr\" \"rd\"","code":""},{"path":"https://stopsack.github.io/risks/reference/rr_rd_mantel_haenszel.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Risk Ratios and Risk Differences from Mantel-Haenszel Estimators — rr_rd_mantel_haenszel","text":"Greenland S, Rothman KJ. Introduction Stratified Analysis. : Rothman KJ, Greenland S, Lash TL. Modern Epidemiology. 3rd edn. Lippincott Williams & Wilkins: Philadelphia, PA 2008. Page 275. Risk ratios: formulae 15-18, -20, -22. Risk differences: formulae 15-18, -19, -21.","code":""},{"path":"https://stopsack.github.io/risks/reference/rr_rd_mantel_haenszel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Risk Ratios and Risk Differences from Mantel-Haenszel Estimators — rr_rd_mantel_haenszel","text":"","code":"# Newman SC. Biostatistical methods in epidemiology. New York, NY: # Wiley, 2001, table 5.3  library(tibble)  # used to set up example data dat <- tibble(   death    = c(rep(1, 54), rep(0, 138)),   stage    = c(rep(\"Stage I\", 7),  rep(\"Stage II\", 26), rep(\"Stage III\", 21),                rep(\"Stage I\", 60), rep(\"Stage II\", 70), rep(\"Stage III\", 8)),   receptor = c(rep(\"Low\", 2),  rep(\"High\", 5),  rep(\"Low\", 9),  rep(\"High\", 17),                rep(\"Low\", 12), rep(\"High\", 9),  rep(\"Low\", 10), rep(\"High\", 50),                rep(\"Low\", 13), rep(\"High\", 57), rep(\"Low\", 2),  rep(\"High\", 6)))  # Risk difference rr_rd_mantel_haenszel(   data = dat,   exposure = stage,   outcome = death,   confounders = receptor,   estimand = \"rd\") #> # A tibble: 2 × 7 #>   term           estimate std.error conf.low conf.high model estimand #>   <chr>             <dbl>     <dbl>    <dbl>     <dbl> <chr> <chr>    #> 1 stageStage II     0.159    0.0591   0.0435     0.275 mh    rd       #> 2 stageStage III    0.573    0.103    0.372      0.775 mh    rd        # Risk ratio, log scale: result <- rr_rd_mantel_haenszel(   data = dat,   exposure = stage,   outcome = death,   confounders = receptor,   estimand = \"rr\") result #> # A tibble: 2 × 7 #>   term           estimate std.error conf.low conf.high model estimand #>   <chr>             <dbl>     <dbl>    <dbl>     <dbl> <chr> <chr>    #> 1 stageStage II     0.918     0.393    0.148      1.69 mh    rr       #> 2 stageStage III    1.77      0.397    0.992      2.55 mh    rr        # Risk ratio, exponentiated: result %>%   dplyr::mutate(dplyr::across(.cols = c(estimate, conf.low, conf.high),                               .fns = exp)) #> # A tibble: 2 × 7 #>   term           estimate std.error conf.low conf.high model estimand #>   <chr>             <dbl>     <dbl>    <dbl>     <dbl> <chr> <chr>    #> 1 stageStage II      2.50     0.393     1.16      5.41 mh    rr       #> 2 stageStage III     5.87     0.397     2.70     12.8  mh    rr"},{"path":"https://stopsack.github.io/risks/reference/summary.duplicate.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for logistic model with case duplication and cluster-robust covariance — summary.duplicate","title":"Summary for logistic model with case duplication and cluster-robust covariance — summary.duplicate","text":"Summarize results fitting logistic model case duplication cluster-robust covariance. output regular summary(glm(...)), except using cluster-robust standard errors.","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.duplicate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for logistic model with case duplication and cluster-robust covariance — summary.duplicate","text":"","code":"# S3 method for duplicate summary(   object,   dispersion = NULL,   correlation = FALSE,   symbolic.cor = FALSE,   ... )"},{"path":"https://stopsack.github.io/risks/reference/summary.duplicate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for logistic model with case duplication and cluster-robust covariance — summary.duplicate","text":"object Model dispersion used correlation used symbolic.cor used ... arguments, used","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.duplicate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for logistic model with case duplication and cluster-robust covariance — summary.duplicate","text":"Model summary (list)","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.margstd_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for models using marginal standardization — summary.margstd_boot","title":"Summary for models using marginal standardization — summary.margstd_boot","text":"Summary models using marginal standardization","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.margstd_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for models using marginal standardization — summary.margstd_boot","text":"","code":"# S3 method for margstd_boot summary(   object,   dispersion = NULL,   correlation = FALSE,   symbolic.cor = FALSE,   level = 0.95,   bootrepeats = 1000,   bootci = c(\"bca\", \"normal\", \"nonpar\"),   ... )"},{"path":"https://stopsack.github.io/risks/reference/summary.margstd_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for models using marginal standardization — summary.margstd_boot","text":"object Model dispersion used correlation used symbolic.cor used level Confidence level, defaults 0.95. bootrepeats Bootstrap repeats standard errors. Defaults 1000. Consider increasing. bootci Type bootstrap confidence interval: \"bca\" Default. Parametric BCa (bias-corrected accelerated) confidence intervals. \"normal\" Parametric normality-based confidence intervals, require lower repeat numbers less accurate may result invalid results ratios. \"nonpar\" Non-parametric BCa confidence intervals, used caution risk sparse-data bias non-parametric bootstrapping. ... used","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.margstd_boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for models using marginal standardization — summary.margstd_boot","text":"Model summary (list)","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.margstd_delta.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for models using marginal standardization with delta method SEs — summary.margstd_delta","title":"Summary for models using marginal standardization with delta method SEs — summary.margstd_delta","text":"Summary models using marginal standardization delta method SEs","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.margstd_delta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for models using marginal standardization with delta method SEs — summary.margstd_delta","text":"","code":"# S3 method for margstd_delta summary(   object,   dispersion = NULL,   correlation = FALSE,   symbolic.cor = FALSE,   level = 0.95,   ... )"},{"path":"https://stopsack.github.io/risks/reference/summary.margstd_delta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for models using marginal standardization with delta method SEs — summary.margstd_delta","text":"object Model dispersion used correlation used symbolic.cor used level Confidence level, defaults 0.95. ... used","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.margstd_delta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for models using marginal standardization with delta method SEs — summary.margstd_delta","text":"Model summary (list)","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.risks.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate model summary — summary.risks","title":"Generate model summary — summary.risks","text":"Determine type risks model fitted generate appropriate summary.","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.risks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate model summary — summary.risks","text":"","code":"# S3 method for risks summary(object, conf.int = TRUE, default = TRUE, ...)"},{"path":"https://stopsack.github.io/risks/reference/summary.risks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate model summary — summary.risks","text":"object Fitted model conf.int Add confidence intervals printout? Defaults TRUE. default Normal confidence intervals via confint.default()? Default TRUE. setting default = FALSE, profiling-based confidence intervals can calculated binomial models. ... Passed ","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.risks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate model summary — summary.risks","text":"Model summary (list)","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.risks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate model summary — summary.risks","text":"multiple models fitted (approach = \"\"), first converged model displayed. models can accessed via returned list $all_models.","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.robpoisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for Poisson model with robust covariance — summary.robpoisson","title":"Summary for Poisson model with robust covariance — summary.robpoisson","text":"Summarize results fitting Poisson model robust/empirical/sandwich covariance. output regular summary(glm(...)), except using robust standard errors.","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.robpoisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for Poisson model with robust covariance — summary.robpoisson","text":"","code":"# S3 method for robpoisson summary(   object,   dispersion = NULL,   correlation = FALSE,   symbolic.cor = FALSE,   ... )"},{"path":"https://stopsack.github.io/risks/reference/summary.robpoisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for Poisson model with robust covariance — summary.robpoisson","text":"object Model dispersion used correlation used symbolic.cor used ... arguments, used","code":""},{"path":"https://stopsack.github.io/risks/reference/summary.robpoisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary for Poisson model with robust covariance — summary.robpoisson","text":"Model summary (list)","code":""},{"path":"https://stopsack.github.io/risks/reference/tidy.risks.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy model summaries for risks models — tidy.risks","title":"Tidy model summaries for risks models — tidy.risks","text":"Obtain tibble (data frame) parameters, coefficients, standard errors, confidence limits, p-values. column type model fitted added.","code":""},{"path":"https://stopsack.github.io/risks/reference/tidy.risks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy model summaries for risks models — tidy.risks","text":"","code":"# S3 method for risks tidy(   x,   conf.int = TRUE,   conf.level = 0.95,   bootrepeats = 1000,   bootci = c(\"bca\", \"normal\", \"nonpar\"),   bootverbose = FALSE,   exponentiate = FALSE,   default = TRUE,   ... )"},{"path":"https://stopsack.github.io/risks/reference/tidy.risks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy model summaries for risks models — tidy.risks","text":"x Model conf.int Show confidence intervals? conf.level Optional. Confidence level. Defaults 0.95. bootrepeats Optional. Number bootstrap repeats. Applicable models fitted via marginal standardization bootstrapping (approach = \"margstd_boot\"). Defaults 1000. Strongly recommended increase repeats >>1000. bootci Optional applicable approach = \"margstd_boot\" . Type bootstrap confidence interval: \"bca\" Default. Parametric BCa (bias-corrected accelerated) confidence intervals. \"normal\" Parametric normality-based confidence intervals, require lower repeat numbers less accurate may result invalid results ratios. \"nonpar\" Non-parametric BCa confidence intervals, used caution risk sparse-data bias non-parametric bootstrapping. bootverbose Optional. Add values bootrepeats bootci parameters jackknife-based Monte-Carlo error confidence limits (type = \"bca\") returned tibble? Defaults FALSE. exponentiate Optional. Exponentiate coefficients confidence limits? Defaults FALSE. Setting exponentiate = TRUE useful relative risk models (log links). default Use default, normality-based confidence intervals? Defaults TRUE. default = FALSE, binomial models , profile likelihood-based confidence intervals can calculated. ... Passed ","code":""},{"path":"https://stopsack.github.io/risks/reference/tidy.risks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tidy model summaries for risks models — tidy.risks","text":"tibble","code":""},{"path":"https://stopsack.github.io/risks/reference/tidy.risks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Tidy model summaries for risks models — tidy.risks","text":"multiple types models fitted, tidy() can used parameters models , one tibble. last column tibble includes name model. See examples.","code":""},{"path":"https://stopsack.github.io/risks/reference/tidy.risks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy model summaries for risks models — tidy.risks","text":"","code":"# Define example data library(broom)  # provides tidy() function dat <- tibble::tibble(   death    = c(rep(1, 54), rep(0, 138)),   stage    = c(rep(\"Stage I\", 7),  rep(\"Stage II\", 26), rep(\"Stage III\", 21),                rep(\"Stage I\", 60), rep(\"Stage II\", 70), rep(\"Stage III\", 8)),   receptor = c(rep(\"Low\", 2),  rep(\"High\", 5),  rep(\"Low\", 9),  rep(\"High\", 17),                rep(\"Low\", 12), rep(\"High\", 9),  rep(\"Low\", 10), rep(\"High\", 50),                rep(\"Low\", 13), rep(\"High\", 57), rep(\"Low\", 2),  rep(\"High\", 6))) # Fit and tidy the model fit_rr <- riskratio(formula = death ~ stage + receptor, data = dat) tidy(fit_rr) #> # A tibble: 3 × 8 #>   term           estimate std.error statistic   p.value conf.low conf.high model #>   <chr>             <dbl>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr> #> 1 stageStage I      0         0        NaN    NaN          0          0    marg… #> 2 stageStage II     0.899     0.387      2.32   2.03e-2    0.140      1.66 marg… #> 3 stageStage III    1.81      0.378      4.78   1.75e-6    1.07       2.55 marg…  # Marginal standardization, # increase number of bootstrap repeats: # \\donttest{ fit_rr <- riskratio(   formula = death ~ stage + receptor, data = dat,   approach = \"margstd_boot\") tidy(fit_rr, bootrepeats = 2000) #> # A tibble: 3 × 8 #>   term           estimate std.error statistic   p.value conf.low conf.high model #>   <chr>          <dbl[1d>     <dbl>     <dbl>     <dbl>    <dbl>     <dbl> <chr> #> 1 stageStage I      0         0        NaN    NaN         NA         NA    marg… #> 2 stageStage II     0.899     0.687      1.31   0.191      0.142      1.74 marg… #> 3 stageStage III    1.81      0.681      2.65   0.00795    1.02       2.57 marg… # }  # Multiple types of models fitted: # \\donttest{ fit_rr <- riskratio(formula = death ~ stage + receptor, data = dat,                     approach = \"all\") #> Warning: undefined subclass \"ndiMatrix\" of class \"replValueSp\"; definition not updated #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: numDeriv #> Loading required package: quantreg #> Loading required package: SparseM #>  #> Attaching package: ‘SparseM’ #> The following object is masked from ‘package:base’: #>  #>     backsolve #>  #> Attaching package: ‘turboEM’ #> The following objects are masked from ‘package:numDeriv’: #>  #>     grad, hessian tidy(fit_rr) #> # A tibble: 34 × 8 #>    term           estimate std.error statistic  p.value conf.low conf.high model #>    <chr>          <dbl[1d>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl> <chr> #>  1 (Intercept)      -2.37      0.360     -6.57 5.08e-11  -3.07      -1.66  robp… #>  2 stageStage II     0.925     0.393      2.35 1.87e- 2   0.154      1.70  robp… #>  3 stageStage III    1.78      0.386      4.61 4.03e- 6   1.02       2.53  robp… #>  4 receptorLow       0.489     0.213      2.30 2.16e- 2   0.0718     0.906 robp… #>  5 (Intercept)      -2.35      0.360     -6.53 6.55e-11  -3.06      -1.65  glm_… #>  6 stageStage II     0.931     0.393      2.37 1.78e- 2   0.161      1.70  glm_… #>  7 stageStage III    1.77      0.385      4.60 4.33e- 6   1.01       2.52  glm_… #>  8 receptorLow       0.444     0.197      2.25 2.42e- 2   0.0578     0.829 glm_… #>  9 (Intercept)      -2.35      0.360     -6.53 6.55e-11  -3.06      -1.65  logb… #> 10 stageStage II     0.931     0.393      2.37 1.78e- 2   0.161      1.70  logb… #> # ℹ 24 more rows # }"},{"path":"https://stopsack.github.io/risks/news/index.html","id":"risks-042","dir":"Changelog","previous_headings":"","what":"risks 0.4.2","title":"risks 0.4.2","text":"CRAN release: 2023-06-13 First CRAN submission. Improve detection interactions involving exposure variable \"margstd_delta\".","code":""},{"path":"https://stopsack.github.io/risks/news/index.html","id":"risks-041","dir":"Changelog","previous_headings":"","what":"risks 0.4.1","title":"risks 0.4.1","text":"tidy.risks(): Increase default bootrepeats 1000, consistent summary().","code":""},{"path":"https://stopsack.github.io/risks/news/index.html","id":"risks-040","dir":"Changelog","previous_headings":"","what":"risks 0.4.0","title":"risks 0.4.0","text":"Breaking change: consistency, default option model fitting (approach = \"auto\") now always uses marginal standardization fitting logistic model. previous approach, relied different models fitted, available approach = \"legacy\". requesting approach = \"margstd_delta\" presence interaction terms involving exposure variable, warning displayed. Model fitting \"auto\" uses bootstrap (.e., \"margstd_boot\") case. approach = \"margstd_boot\" bug fix: Keep categorical exposures type factor correct order. Include breastcancer dataset package. {addreg} {logbin} now soft dependencies (Suggests: instead Imports:) Remove {lifecycle} dependency Compatibility tidyselect 1.2.0 variable selection","code":""},{"path":"https://stopsack.github.io/risks/news/index.html","id":"risks-030","dir":"Changelog","previous_headings":"","what":"risks 0.3.0","title":"risks 0.3.0","text":"Rename approach = \"glm_start\" \"glm_startp\" (Poisson). Rename approach = \"margstd\" \"margstd_boot\". consistency approaches, longer treat numeric variables two levels (e.g., 1 2) categorical approach = \"margstd_boot\". approach = \"margstd_delta\", marginal standardization fitting logistic model standard errors via delta method. approach = \"margstd_boot\" now also implements average marginal effects handle continuous exposures. approach = \"duplicate\", case duplication method risk ratios, proposed Miettinen, cluster-robust standard errors proposed Schouten et al. approach = \"glm_startd\", using case duplication-based coefficients starting values binomial models. rr_rd_mantel_haenszel(): New function comparison purposes. approach = \"auto\", default, now attempts model fitting order priority: approach = \"glm\"; approach = \"glm_startp\" (risk ratios ); approach = \"margstd_delta\". fail, user shown error messages plain logistic model. Bootstrap repeats (bootrepeats) approach = \"margstd_boot\" now default 1000. summary.robpoisson(): Fix sandwich standard errors. tidy() output correct. attach logbin package namespace; export logbin::conv.test() behalf. Move MASS package (needed testthat) Suggests. Remove usage unexported functions stats. approach = \"margstd_boot\", avoid two rounds bootstrap standard error confidence intervals separately. Rewrite internal fitting function fit_and_predict(), replacing eststd(). Overall, bootstrapping two times faster now.","code":""},{"path":"https://stopsack.github.io/risks/news/index.html","id":"risks-022","dir":"Changelog","previous_headings":"","what":"risks 0.2.2","title":"risks 0.2.2","text":"tidy(bootverbose = TRUE): BCa bootstrap confidence intervals, also return jacksd.low jacksd.high, jackknife-based Monte-Carlo standard errors upper lower confidence limits. riskdiff(): Remove leftover “logistic” parameter. summary.risks(), tidy.risk(): fix error handling model converged.","code":""},{"path":"https://stopsack.github.io/risks/news/index.html","id":"risks-021","dir":"Changelog","previous_headings":"","what":"risks 0.2.1","title":"risks 0.2.1","text":"Fix bugs bootci = \"normal\" summary.risks(). Return name dataset. Expand test coverage.","code":""},{"path":"https://stopsack.github.io/risks/news/index.html","id":"risks-020","dir":"Changelog","previous_headings":"","what":"risks 0.2.0","title":"risks 0.2.0","text":"Parametric BCa bootstrap confidence intervals via bcaboot package new default. Parametric normality-based intervals backup. Non-parametric bootstrapping BCa intervals retained option completeness. Remove precision weight option. Expand documentation.","code":""},{"path":"https://stopsack.github.io/risks/news/index.html","id":"risks-010","dir":"Changelog","previous_headings":"","what":"risks 0.1.0","title":"risks 0.1.0","text":"First release","code":""}]
